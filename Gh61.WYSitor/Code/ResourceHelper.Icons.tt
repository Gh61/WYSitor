<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<# 
    string absolutePath = Host.ResolvePath("../Resources/Icons.xaml");
    string contents = File.ReadAllText(absolutePath);
    List<string> icons = new List<string>();
	Dictionary<string, bool> notPublicIcons = new Dictionary<string, bool>()
	{
		{ "Icon_DropDownArrow", true },
		{ "Icon_HighlightColor_Main", true },
		{ "Icon_HighlightColor_Underscore", true },
		{ "Icon_TextColor_Main", true },
		{ "Icon_TextColor_Underscore", true },
		{ "Icon_Bucket_Main", true },
		{ "Icon_Bucket_UnderscoreAndDrop", true }
	};

	int keyIndex = 0;
	do
	{
		keyIndex = contents.IndexOf("x:Key=\"", keyIndex);
		if (keyIndex > 0)
		{
			var afterStartQuote = keyIndex + 7;
			var endIndex = contents.IndexOf("\"", afterStartQuote);

			string key = contents.Substring(afterStartQuote, endIndex - afterStartQuote);
			if (!notPublicIcons.ContainsKey(key))
			{
				icons.Add(key);
			}

			keyIndex = endIndex;
		}
		else
		{
			break;
		}
	} while(true);
#>
using System.Windows;

namespace Gh61.WYSitor.Code
{
    public static partial class ResourceHelper
    {
<#		foreach(string iconName in icons)
		{#>
        public static UIElement <#= iconName #> => GetIcon("<#= iconName #>");
<#
		}
	#>
    }
}